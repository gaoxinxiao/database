胡明川


电话 13718893193
qq：
=============================
HTML5   HTML  的第五个版本的   超文本标记语言

HTML4

css？ 层叠样式表
网站根目录结构？

js

css
image
index.html

网站默认首页？
index.html     default.html 

静态页面 ？  写死的

动态页面？  能动态的数据  数据库  ajax   jsonp  
========================================================
动态页面   user.php  user.asp   user.jsp
===========================================================
表单  
？
form    name   target 打开方式 _self  _blank   method 提交方法 get   post      action 提交地址

get ？   地址栏提交  明文提交 相对来说 不安全  容量很小 2k
post？    密文提交  相对安全    容量很大！！
================================================================
word-break: break-all; 强制文字换行
p:first-line  选择第一行文字

text-transform: uppercase;  设置文字全部大写
text-transform: lowercase； 设置文字全部小写
text-transform：capitalize  设置首字母大写！！
======================================================================

选择器
+  相邻兄弟选择器

~  兄弟选择器

>  直属子元素选择器
=======================================================================
手机端模拟器   只是个模拟器  作业在模拟器下演示 就ok 了  在公司里面必须用真机 去做测试 发现问题！！

如何在手机端模拟器演示呢？f12  
设备的宽度 和高度
iphone4    宽度 320
iphone5    宽度  320
iphone6    宽度  375
iphone6 plus   宽度  414
====================================================================================

meta  信息元标签！！！！！



移动端！ 写好页面！ 视窗窗口上面 视窗窗口 很宽    980 以上

视窗窗口？  layout viewport(默认的 宽度很宽)     visual viewport  ideal  viewport
meta  name=“viewport”   content=" width=device-width,maximum-scale=1.0，minimun-scale=1.0,initial-scale=1.0，user-scale=no"

width=device-width 宽度等于设备的宽度
width=320;
width=375
maximum-scale=1.0 最大缩放比例
minimum-scale=1.0  最小缩放比例
initial-scale=1.0 初始缩放比例
user-scalable=no  禁止用户缩放  默认值 yes
======================================================================================
格式检测？
<meta name="format-detection" content="telephone=no,email=no,">
telephone=no   禁止拨打电话
email=no   禁止发送邮件
adress=no   禁止跳转地图；
=======================================================================================================
优先使用ie 的最新  最高版本
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1.0">    
=======================================================================================
新建代码片段
1.  工具 ->新代码片段    
2.开始删除中间的部分  从hello 删 到  .  一整行全部删除
3. 复制粘贴新代码片段
4.保存在原位置    保存
5. 调用  ctrl+ shift + p
6.、输入 您保存的代码片段名称
================================================================================

a  input  button   有问题
移动端兼容性问题   高亮问题   a 链接在点击的时候 在ios  灰色背景  Android 有蓝色的边框
-webkit-tap-heighlight-color：rgba(0,0,0,0)
==================================================================================
禁止用户选择文字
-webkit-user-select:none;
===================================================================================

取消表单的默认样式；

appearance ：none;
====================================================================================
input::-webkit-input-placeholder{
	color:blue;
} 
====================================================================================
禁止长按弹出菜单

-webkit-touch-callout：none； 
=====================================================================================
html 和css  区分大小写？  不区分
=====================================================================================
无衬线字体！！
font-family: sans-serif;  无衬线字体！！！！！！！
=====================================================================================

css预处理器  sass  less  学 sass  sass  大公司用的比较多  功能也比较多！
css  预处理器的优点~=！！  代码更佳简洁   更佳直观  实用性更强！ 



sass    考拉！！
sass  文件 后缀名  共各种  .sass    .scss
注释！！！
 
html     <!--  -->

css              /*  */
=====================================================================================
指定sass 的编码格式！！   @charset “utf-8”;
sass   也有注释！！！
//  单行注释  编译后不保留！！！
/*   */  多行注释    编译后保留！！
========================================================================================
输出方式  共有 四中 
  expanded(默认展开输入方式)  
======================================================================================
引入外部文件！！
@import  url(“reset.css”);
@import  "reset.css";
@import  url（reset.css）;
======================================================================================
定义变量
$变量的名字： 变量的值；

注意 在scss 中 变量区分大小写！！！！
======================================================================================

运算符  +  -  *   /  %；

+ -   没有问题

* 注意  运算符两边 只能有一个 有单位！！！    或者两边都没有单位

/  运算符左边必须有单位！！！   或者两边都没有单位

%  取余  取模
======================================================================================


meta  信息元标签

设置视窗窗口？

meta  name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no"

width=  320;
width=414
width=device-width;
height=320；
height=device-height；

视窗窗口 很宽    。   宽度980 以上。  默认的  layout  viewport
========================================================================

格式检测！

meta  name=“format-detection”  content="telephone=no,email=no,adress=no"
===========================================================================

优先使用ie的 最新版本！


meta   http-equiv=“X-UA-compatiable” content="ie=edge,chorme=1.0"
============================================================================
禁止用户选择文字
-webkit-user-select:none
===========================================================================

a  标签  有兼容性问题  高亮     在 ios 灰色背景   Android  蓝色边框

-webkit-tap-highlight-color：rgba（0,0,0,0）
==========================================================================
取消表单的默认样式
appearance:none
==========================================================================
改变提示文字的颜色

input::-webkit-input-placeholder{
	color:#ccc;
}
=======================================================================
rgba（） 透明度   r  红  0-255   g 绿 0-255  b 蓝 0-255  a透明度   0-1；
=========================================================================

hsla（） h  色调   s  饱和度   l  亮度   a   透明度   a （0-1）
========================================================================  
opacity：0;0  完全透明 1  不透明 

alpha(opacity=100)  ie  6 兼容性写法？？？

====================================================================

background-size:100%  100%;   cover(完全覆盖)  contain（宽或高覆盖）
background-clip：默认值   border-box               content-box;   背景剪切
background-origin:padding-box;  背景的显示范围
background-attachment：背景附件  fixed   scroll

box-sizing; 默认值   content-box    向内挤压 ！！！！！！
=====================================================================
sass  
文件 后缀名  共有两种

.sass 没有大括号 和分号       .scss  有大括号和分号
=============================
.sass

.box 

	width:200px
	height:200px
        
=================================
.scss

.box{

	width:200px;
	height:200px;
}

==================================
定义变量！！！

$w200:200px;

定义变量的默认值

 $w200:200px    !default;
======================================
字符串  String         "asdasdasoizdyasefghasfaskdgasd";

布尔值  Boolean  真假   真 true   假 false
数字 Number        3213546848；
========================================
全局变量    全局 的 谁都能用的！！！！
局部变量！！ 
=========================================
计算

+   -    *      /   %
==========================================

+  和减法  没问题

* 只能有一个有单位  

/  只能左边带单位  或者 两边都有单位！！！  或者  都没有单位     
===============================================、


颜色  计算！！！

$red:#111111；
$blue:#222222;

.box{
	color:$red +$blue;
}
============================================
  &： 父元素选择器   引用父级！！！
=============================================
选择器嵌套！！

.box{
	span{}
}

.box{
	a{
		color:red
		&:hover{
		}
	}
}
====================================================
属性的嵌套！！！！
.box{
	background:{
		color:red;
		size:20px 20px;
		clip:border-box;
		image:url(../image/banner.jpg);
		origin:content-box;
		attachment:scroll;
	}
}

=======================================================

混合宏  解决代码重复利用的为题；

定义混合宏

@mixin  demo{
   .....
.....
}

调用  混合宏

.box{
 @include demo;
}

@mixin abc($名字, $名字){
	width:$名字；
	height:$名字；
}

================================
有默认值的混合宏;
@mixin  qq($w:100px,$bg:blue,$c:yellow){
	width:$w;
	background:$bg;
	color:$c;
}

=============================================
readonly  只读类型
required  必填选项
pattern  表现限制 
autofocus  自动获得焦点
=================================================
<input  list="lists">
		<datalist id="lists">
			<option value="aaa" name="aa">aaa</option>
			<option value="bbb">bbb</option>
			<option value="ccc">ccc</option>
			<option value="ddd">ddd</option>
			<option value="北京">北京</option>
		</datalist>
==================================================
 
:empty 查询当前内容为空的元素
:root{}  根元素选择器
=============================================
.not()  除了。某个符合条件的！！！！
===========================================


属性值 调用！！！

属性调用 ！！！  有问题   需要用插值的写法插进来！！
=============================================

插值   插在 字符串之中！！！
#{ 内容！！   }
#{ $w }

插值在哪都好使！！！
======================================================

选择器 占位符！！！！！  %demo;
==================================================

继承  
1.  继承 id 选择器  class选择器  标签选择器
2.  继承选择器占位符  %demo；优点。  编译后不保留原定义的%demo  不会产生多余的代码！！

=====================================================

混合宏！
定义混合宏！  
@mixin 

调用混合宏
@include 
==================================================
混合宏 和 继承有什么区别？？

1.定义调用?不一样
2.混合宏可以传递参数！！     继承 不能传参  写死！！！
3.编译后效果不一样；   继承编译后 同一行  群组。   混合宏编译后 独立 独占一行！！
====================================================
%qq  选择器占位符 
======================================================
注释 
单行  //    编译后不保留
多行         /*   */  编译后保留
==========================================================
+   -  *   /    %   运算符    运算符左右两边  加一个空格！！！！！

+  -

*   注意！！    只能有一边有单位
/    只能左边有单位   或者两边都有单位！！！
======================================================
@if  判断语句
$i:9;
@if $i==10{
	//条件为真的时候 执行花括号里面的语句！！
	.box{width:150px}
}
====================================================
条件成立 为真  条件不成立  为假
@if  a<10{

}@else if a<20{

}@else if a<30{

}@else{
  如果前面的条件都没满足  那么执行  @else 里面的内容！
}
===========================================================
to 到 最后一位 减一
@for $i from 1  to  9{
  
}

到 最后一位
@for $i from 1 through 10{
}

================================================================
引用父级 &:    父元素选择器
==============================================================
选择器占位符
%
=================================================================

继承    @extend
1. 选择器    id  class   div！！   会产生多余的代码
2.   占位符！！！！  编译后 不会产生多余的代码
==============================================================

混合宏和  继承的区别？

1.混合宏 可以 可以传递参数   。继承不能穿参数
2.混合宏  定义调用不一样
3.  编译后1 混合宏  独占一行。  继承   群组选择器  同一行！！
================================================================
定义变量
$变量名:变量的值  ！default;
=================================================================
变量 可以记进行计算


+  -    *    / %
=======================================================================
颜色的计算！！ 上下相加
================================================================
定义 混合宏

@mixin {}

@mixin aa($bg,$cl){}

定义有默认值的混合宏
@mixin aa（$w:200px,$h:height）{}
============================================================
调用混合宏  @include   aa;
===========================================================
判断   @if  条件为真{

}@else if{

}@else if{
} @else if{
}@else{

}
==================================================================
@while 循环 条件不固定的时间
$i:10;
@while $i>3{
	.box-#{$i}{
		width:200px;
	}
	$i:$i - 1;  必须要有自增 或自减  要不就报错了！！！
}

====================================================================
循环

@for     条件固定的时候用 @for 循环

@while     条件不固定的时候用@while 循环


=========================================
值列表     相当于数组！！ 注意 下标从1开始！！
$lists: 20px 30px 40px 50px 60px 70px 80px 90p 100px;

.box{
		font-size:nth($lists,1);
}

注意 下是从1开始的。
$lists: 20px,30px,40px,50px,60px,70px,80px,90px,100px;

.box{
		font-size:nth($lists,1);
}

===========================================================
@each 循环  循环值列表的！！
$lists: red blue yellow  pink  green  orange  purple;

@each $i in $lists{
	.box-#{$i}{
			background:$i
	}
}
============================================================
@for $i from  1 to 20{

}
@for $i from 1 through 30{


}
============================================================
@mixin aa(){} 声明混合宏 ！！
调用混合宏   @include  
============================================================


html5 新增的标签有哪些？
number
email
date
url
search
week
datetime
datetime-local
form
range   拖动条
color 颜色
month 月份
list
================================================================
readonly:只读类型！！！
disabled 禁用
checked 默认选中
seleted 下拉菜单的默认选中状态 放在  option 身上
autofocus  自动获得焦点
required 必填选项
pattern  表单限制
placeholder  文字提示
================================================================
form 表单  
四个属性！！！ name    target  method  action
================================================================
主体标签

section  article aside  nav  time
==============================================================
非主体标签

header  footer address  hgroup main  
================================================================
P:nth-child(1){}
P:nth-of-type(2){} 同类型的伪类选择器！！！！
=============================================================
属性选择器
P[title]{}
P[title="aa"]{} 完全等于
p[title^="aa"] 起始字符
p[title$="aa"]结束字符
p[title*="aa"]  包含字符
==================================================================
伪类选择器
:hover
:visited
:link
:active
:checked
:disabled
:seleted
:root  根元素选择器
:empty查询的内容是否为空元素
:focus    得到焦点的时候！！
=====================================================================
+ 相邻兄弟选择器
~  兄弟选择器
 > 直属子元素选择器
==================================================================
浏览器默认字体大小？
 16px;
==============================================================
网站常用的字体大小？
14px   或  12px;

=========================
h4= font-size:16px =font-size:medium（ 正常字体大小）
=================================================================
background-size：图片的大小  100%  100%;   cover （完全覆盖  高度和宽度完全覆盖） contain（宽或高覆盖）；
background-iamge：背景图片    渐变都可以！！
-webkit-radial-gradient(red ,blue ,pink )  径像渐变
-webkit-linear-gradient(60deg，red ,blue 20% ,pink 60% ) 线性渐变 
========================================================================
background-clip:背景裁剪 默认值  border-box
background-origin：背景显示的范围   默认值 padding-box
background-attachment：背景附件  默认值   sroll    scroll 滚
background-color:背景的颜色
background-position:背景定位 20px  10px;  
==========================================================================
background： 复合属性；
===========================================================================
border:
border-color:边框的颜色
bordr-width:边框的粗细
border-style：边框的样式
border-radius;圆角边框
border-image: url(aa.png)  30/20px repeat;   30 剪切的范围  20px  边框线的粗细
===============================================================================


transform: 变形   使什么 放生改变！ 默认值  none；

transform:   ie8 及以下不支持！！！

=========================================================================
重排  重绘    

重排  重新绘制 渲染 整个页面    地位   position  会触发！！！   
重绘    不会重新渲染整个页面        改变背景色。。  字体颜色。。。。  

transform   不会触发重排！！   会触发重绘！！

=============================================================================

transform: 优点。性能比较高; 他不会触发重排！！！


transform: 元素本身左边并没有移动或发生大小变化；

transform；translate（）   平移 位移  移动！！！！

transform:translate(300px) 只有一个值的时候 默认值 水平方向  如果是正值 向右移动  如果是负值 向左移动！
transform:translate(100px,200px)  第一个值代表的是水平方向，第二个值代表的是垂直方向
transform：translate3d（100px,200px,300px）第一个值 水平x轴  第二个值 y轴  第三个值z轴！！
transform:translateX(100px)   指定x轴平移   只能有一值;
transform:translateY(200px)  指定Y轴平移    只能有一个值
transform：translateZ（100px） 指定z轴平移 只能有一个值   前后方向

单位  %    %相对于自身的宽度 或高度   rem 单位  em 单位  px
============================================================================================
旋转！！
transform:rotate();
transform:rotate(60deg) 默认值z轴旋转！！！
transform:rotateX(60deg)  代表的是x轴旋转；
transform:rotateY(60deg) 代表的是Y轴旋转！！
transform：rotateZ（60deg） 代表的是z轴旋转！！

transform:rotate3d(1,0,0,60deg)  3d旋转  注意 前三个值代表的是x轴  y轴  z轴的矢量值   最后一个是旋转的度数； 
前三个值不能给单位    最后一个值是度数！！   3d 旋转 4个值！  如果是0 代表的是当前轴不旋转   如果是1  代表的是当前轴旋转！！

 旋转的单位只能是 度数！！！！ deg
===========================================================================================
缩放!!!
transform:scale(1.0) 默认x轴 和 y轴缩放  1.0倍     如果是1.0  不变   如果小于1.0  缩小   若果大于1.0 放大！！

transform:scale(1.0,2.0)  x轴缩放1.0倍   y轴缩放 2.0倍；
transform;scaleX(1.0)x轴缩放1.0倍
transform：scaleY(1.0)y轴缩放1.0倍
transform:scaleZ(1.0） z轴缩放1.0倍
transform：scale3d（1.0,2.0,3.0）x轴1.0倍  y轴2.0倍  z轴3.0倍

缩放  不能有单位     直接给 倍数   1.0   0.5  0.6  0.3  0.2；
==========================================================================================
倾斜！！！

transform:skew（）
transform: skew(60deg)  一个值 默认是 x轴倾斜！！
transform: skew(60deg,60deg)  第一个值是x轴倾斜  第二个值  是 y轴倾斜
transform：skewX（60deg）  指定x轴倾斜    只能有一个值
transform：skewY（60deg）指定Y轴倾斜   只能一个值！


倾斜没有z轴  
倾斜也没有3d;
==============================================================================================


有3d 的  有哪些？

transform:rotate3d（0，0,1,60deg） 四个参数
transform：translate（30px,30px,30px）3个参数
tansform:scale3d(1.0,2.0, 3.0)3个参数
===============================================================================================
注意！！！！ 
transform：skew()  倾斜没有3d  没有z轴
===============================================================================================

单位 只能是度数的有哪些：？  60deg
transform：rotate（60deg）
transform；skew（60deg）
===================================================

transform；translate（）  单位  px  rem  em  %； 
================================================
transform：scale（）没有单位  只能是倍数   1.0  倍 不变  ；

=========================================================================================
 改变左边中心点
transform-origin：center center;  
 50%  50%;
 第一个值水平方向 第二个值垂直方向！  center  left 
right  bottom top; 50px  40px；
  给 固定数值也可以
========================================================================================
旋转   ?  

整数  数值越来越大 顺时针  
负数  数值越来越小  逆时针==
触发执行的简单动画  触发？  滑过 点击  获得焦点时
transition:   必须要写一个属性  必须要写时间  时间的单位1s   1s=1000ms  复合属性！！
transition-property:  过渡的属性  默认值all   border-radius,background,width,height,font-size,line-height,transform;
transition-duration:0s;  动画过渡的时间   动画过渡的速度； 默认值 0s
transition-delay:0s   延迟时间 等待时间  默认值 0s
transition-timing-function:动画过渡的类型 ease(默认值  慢快慢)   linear（线性  匀速）  ease-in(越来越快) ease-out（越来越慢）
ease-in-out（以慢开始  以慢结束）；

transition:all 2s linear  4s；   第一个写的时间一定是过渡时间  第二个写的时间 是延迟时间 
=======================================================================================
动画 共两种 

触发执行的简单动画 ！  transition
自执行动画      ！   animation

=======================================================================================

触发执行的简单动画！！！  
 点击  滑过的时候  获得焦点的时候 。。。

==========================================================================================
自执行动画！！
animation：  复合属性 必须要写两个属性值      动画执行的时间  动画的名字！
animation-name:none   动画的名字   必须要写！！
animation-duration：动画执行的时间 动画执行的速度！！  默认值  0s  1s  =  1000ms
animation-delay：动画的延迟时间  默认值   0s  
animation-timing-function 动画的类型 默认值 ease ease-in ease-out ease-in-out   linear  

aniamtion-fill-mode ：设置动画结束开始或结束的位置（设置时间之外的状态）
 默认值 none  forwards（在结束位置停下来）  backwards(在开始位置停下来）  both（开始或结束的位置）
animation-direction：动画执行的方向
 默认值normal  reverse（反向）  alternate（先正向后反向，交替执行）  alternate-reverse（先反后正，交替执行）;
animation-iteration-count；动画执行的次数。 默认值是1次  无限次数  infinite（无限次数）；


定义动画的关键帧
@keyframes  动画名字{
	0%{}  == from{}
	100%  == to{}
}



=====================================================================================================

动画共有2 中

触发执行的简单动画！  transition  必须要写的是   过渡时间  1个  transition-duration： 过渡时间！！  默认 0s
自执行动画     animation： 必须要写的是两个属性值   名字 和时间  animation-name   animation-duration:


触发执行的动画
transition ： 复合属性   必须 要写  1个属性值   必须写过渡时间 
transition-property:过渡属性 默认值 all   width，height，font-szie，border-radius,line-height,color,transform,background,.....
transtition-timing-function: 过渡动画的类型 方式 ease（慢快慢）  ease-in(越来越快)  ease-out（越来越慢  ） ease-in-out（以慢开始以慢结束）  linear（匀速）
transition-duration: 默认值：0s  
transition-delay：延迟时间！  默认值  0s;
==================================================================================================================
自执行动画

animation : 必须要写连个属性 值 ？   
animation-name:none；  动画的名字！
animation-duration:    动画执行的时间！  默认值0s
animation-delay：动画执行的延迟时间  默认值  0s
animation-timing-function:  动画执行的类型！   ease  linear  ease-in ease-out ease-in-out
animation-direction:normal（默认值） reverse（反向） alternate（先正后反  交替执行）  alternate-reverse（先反后正  交替执行）
animation-iteration-count:  默认值 1次  无限次数  infinite;
animation-fill-mode:设置动画时间之外的状态  forwards（在结尾处停下来） backwards(开始出停下来)  both（开始或结束的位置）

@keyframes move{
	0%{}   === from{}
	100%   ==  to{}
}





reverse:       animation-direction
backwards;    animation-fill-mode
alternate;    animation-direction
infinite;   animation-iteration-count;
ease;   animation-timing-function
forwards;   animation-fill-mode;
====================================================================

aniamtion-name:move;

@keyframes move{
}

====================================================================

动画库？ 库  ？    仓库！ 车库      放了好多动画效果 ！咱们用的时候直接用就行
animate.css  这是css的一个库    放css 的一个仓库！！ 
哪些 css？  定义了一些 动画！
它预设了抖动（shake）、闪烁（flash）、弹跳（bounce）、
翻转（flip）、旋转（rotateIn/rotateOut）、淡入淡出（fadeIn/fadeOut）
 
必须要添加的类名 animated！！	
=========================================================================
单行溢出隐藏
white-space: nowrap;  强制文字在一行显示
text-overflow: ellipsis    clip(默认值)
overflow:hidden; 溢出隐藏


=============================================================================
自定义字体图标 为什么要用字体图标? 省的截图、 放大放小 不失真！！   不模糊！！
@font-face 使用的的是服务器端的字体;
@font-face {
	font-family:“iconfont”；
	src:url(../) format（“woff”）;
	src：url(../....) format( "eot");
	src:url(../) format("svg");
	src:url(../)format("woff"),url(../) format(“eot”)，url( ../) format( "svg");
}

src: 定义字体图标在服务器上某个地方！！
url（）在服务器上的具体路径！！
format() 指定字体的格式！！
============================================================
一、TrueTpe(.ttf)格式：

.ttf字体是Windows和Mac的最常见的字体，是一种RAW格式，因此他不为网站优化,支持这种字体的浏览器有【IE9+,Firefox3.5+,Chrome4+,Safari3+,Opera10+,iOS Mobile Safari4.2+】；

二、Web Open Font Format(.woff)格式：

.woff字体是Web字体中最佳格式，他是一个开放的TrueType/OpenType的压缩版本，同时也支持元数据包的分离,支持这种字体的浏览器有【IE9+,Firefox3.5+,Chrome6+,Safari3.6+,Opera11.1+】；

三、Embedded Open Type(.eot)格式：

.eot字体是IE专用字体，可以从TrueType创建此格式字体,支持这种字体的浏览器有【IE4+】；

四、SVG(.svg)格式：

.svg字体是基于SVG字体渲染的一种格式,支持这种字体的浏览器有【Chrome4+,Safari3.1+,Opera10.0+,iOS Mobile Safari3.2+】。

===========================================================

字体格式  4 种
ttf mac
eot ie
woff web
svg 谷歌和苹果
================================================================
字体图标  ui
编译
删除
导入 
选择
=======================================================================
定于@font-face{} 必须要写两个属性！！
1.font-family:
2.src:

===========================================================================
表单和表格的区别？
表单用来提交数据
表格  显示数据！！！
=============================================================================


设置触发执行的动画？
transition： 必须写一个！ 必须写触发执行动画的执行时间 transition-duration
过渡属性！
transition-property:默认值all width，height ,.....
过渡时间！
transition-duration:0s;
过渡的延迟时间
transition-delay:0s;
过渡的类型 速度曲线
transition-timing-fuction:ease ease-in ease-out ease-in-out  linear	
====================================
自执行动画
animation： 名字   执行时间
animation-name;none
animation-duration: 0s 
animation-direction:normal（正常） reverse(反向)  alternate（现正后反 交替执行）
alternate-reverse（先反后正交替执行）
animation-iteration-count:默认值 1次  无限次数  infinite;
animation-duration:0s  动画执行的速度 动画执行的时间
animation-fill-mode：动画时间之外的状态！   默认值 none；forwards  backwards  both
()
animation-delay:0s   
animation-timing-function: 动画的类型动画速度的曲线  ease   。。。。。。。
========================================
自定义字体图标
@font-face{}使用的是服务器端的字体
必须要写两个属性！
font-family：
src：
=============================================
src: 在服务器端的地址 
url:  在服务器端的路径
===============================================
src：url(.....) format(字体格式);
src:url(../) format(zitigeshi);
src:url(../) format(//)，url（../） format()
================================================

eot
svg
ttf
woff
================================================
多栏布局  多列布局   兼容性有问题 ie9 及以下不支持  加给父元素！！！
 复合属性
columns：200px   3;   第一个值列宽 第二个值列数； 复合属性 只有两个属性值
column-width:列边框的宽度   默认值auto；
column-count：列边框的数量  默认值auto;
column-rule：列边框的样式
column-rule-width:列与列之间的边框宽度 默认值 medium 
column-rule-style：列与列之间的边框的样式; 共有9个属性值 默认值none
column-rule-color：列与列之间的边框的颜色；默认值  文本的颜色
column-span：是否合并列 默认值none  all(横跨所有的列)
column-gap:设置列间距 默认值为 normal     normal  与当前元素的字体大小值一样

英文下有问题  解决办法   加 word-break: break-all; 强制文字换行
======================================================================
rem 相对对于html 的单位！！！！
em  相对于父级！！！！
======================================================================
弹性盒  

开启弹性盒？  给父级加 display:flex  ;

内联元素  display：inline-flex；
=============================================================
开启弹性盒之后  float  clear    vertical-align  不好使



开启弹性盒后  盒子内的子元素？ 特性？   在一行显示   行内元素支持宽高  如果没有给高度  默认值  父级高度的100%;
===============================================================
设置弹性盒主轴的 方向？ 给谁设置谁就是主轴  另外一个侧轴（垂直轴）

flex-direction:row(默认值  水平)  row-reverse（水平倒序）  column-reverse（垂直 倒序）  column（垂直）
=========================================================================
设置弹性盒子元素在主轴的对齐方式？  
justify-content:flex-start （起始位置  默认值）  flex-end （结束位置 ）  center（居中） space-around（项目两端间距一样。）   space-between（ 两端靠边对齐）
===========================================================================
设置弹性盒子元素在侧轴的对齐方式？
align-items:stretch(拉伸  默认值) flex-start  flex-end  center     baseline（文字基线）；
======================================================================

固定样式  首位固定中间滚动

*{
	margin:0;
	padding:0;
	box-sizing:border-box;
	font-size: .14rem;
	
}
html,body,.box{
	width:100%;
	height:100%;
}
html{
	font-size: 625%;
}

.box{
	display:flex;
	flex-direction: column;
}
header{
	width: 100%;
	height: .4rem;
	background: blue
}
footer{
	width: 100%;
	height: .4rem;
	background: orange;
}
section{
	flex:1;
	width: 100%;
	overflow-y: scroll;

}
=======================================================
开启弹性？
display:flex;
display:inline-flex;

设置 弹性盒主轴的方向？
flex-direction:row(水平方向 默认值) column（垂直方向） row-reverse（水平方向） column-reverse（垂直反向）

设置子元素在主轴上的对齐方式！！
justify-content:flex-start(默认值  起始位置对齐) flex-end（结束位置对齐） center（居中） space-around（项目两端间距相等）  space-between（两端靠边对齐）


设置子元素在侧轴上的对齐方式？
align-itmes默认值 （stretch） flex-start(起始位置) flex-end（结束位置） center（居中） baseline（文字底部基线对齐）

加给父元素的？

display:flex
flex-direction:
justify-content;
align-items;

===============================================
换行  加给父元素 ！

 flex-wrap: nowrap 不换行 默认值  wrap  换行   wrap-reverse 反向换行

=============================================
flex：复合属性！！  加给子元素！！！   默认值  0   1  auto； 
flex-grow： 默认值 0  单位只能给数值     不能给负值   ;  平分父元素剩余的空间   扩展比例
flex-shrink： 默认值 1  单位只能给数值  不能给负值 ;        弹性盒的收缩比例
flex-basis： 默认值是 auto； 单位 给  px  rem em  %  弹性盒的子元素的基准值
====================================================================



flex：  复合属性  加给子元素
flex-grow
flex-shrink
flex-basis
====================================
换行  flex-wrap: nowrap  wrap  warp-reverse  加给父元素！
=======================================

order:子元素显示的顺序 默认值  0  加给 子元素的
数值越小越靠前

-9   -8  -7    -6   -5   -4   -3   -2   -1  0   1  2  3  4  5  6  7  8 9 

=========================================================================
单独设置子元素在侧轴的对齐方式！！
align-self :  默认值 auto  flex-start(起始位置对齐)  flex-end（结束位置对齐）  center（居中）  baseline（文字底部基线） stretch（拉伸）
==========================================================================

flex-flow： 复合属性！！ row  nowrap   加在父元素身上的；
flex-direction：row
flex-wrap： nowrap
=============================================================================
加在父元素身上的有哪些？

display:flex
display:inline-flex;
flex-direction:
justify-content:
align-items;
flex-wrap；
flex-flow：
========================================================================
加在子元素身上的？
order：子元素的显示顺序  数值越小越靠前 ！！！
align-self: 子元素单独在侧轴的对齐方式！
flex：
flex-grow
flex-shrink
flex-basis
=====================================================================
媒体查询 ！！！

@media  媒体类型  and （媒体特性）{
.box{...}
}
@media {
	
}
================================
多个条件
@media screen  and (min-width: 320px) and (max-width: 375px){
		.box div{
			width: 100%;
		}
	}

========================================

媒体类型
tv 电视
print 打印机
handheld 手持设备
screen  屏幕 电脑屏幕 手机屏幕
all  所有的

媒体类型 可以省略 默认值all    后面别加and
============================================= 

媒体特性！！！

width: 宽度
height： 高度

max-width：最大宽度
min-width：最小宽度
max-height：最大高度
min-height 最小高度
device-width:设备的宽度
device-height 设备的高度
max-device-width   最大设备宽度
min-device-width  最小设备宽度
color： 查询的是颜色
scan  扫描的类型！！

===================================================

关键字 ！  共有三种

and   和   两个条件链接在一起

not  除了

only  仅仅
==============================================================================
媒体查询
@media  媒体类型  and  （媒体特性）{
。。。

}
媒体类型？  可以省略  默认 all

tv 电视
print 打印机
screen  电脑屏幕 手机屏幕
handeld 手持设备
all 所有的 
==============================================
媒体特性？
width
height
max-height
max-width
min-width
min-height
device-width
device-height
max-device-width
min-Device-width 
color  查询的颜色
scan  扫描类型
=================================================

媒体查询！！
1. 放在 style 里面

2.  link media ?属性


====================================================
多个条件


300  -   600    之间的  宽度   包含   300 和  600
@media screen  and （max-width:600px） and （min-width：300px）{

。。。。。。。。。。。。。。。。。。。。。。。。
}
=======================================================
多个设备类型

@media  screen and （max-width:400px）,print and（min-width：200px）{}

@media  print and (max-width:800px),tv and  （max-width：400px）{}
===========================================================
媒体查询的关键字？
and 链接 only   仅仅 只有！！！
 not  除了  某种情况！！！！
==========================================================


display:-webkit-box;//开启老弹性盒
	 					-webkit-box-orient:vertical; //老弹性盒的主轴方向
	 					-webkit-line-clamp:2;//显示几行文字！
	 					word-break: break-all;  强制文字换行！
	 					overflow: hidden;  溢出隐藏！！



===========================================================================

弹性盒？

加在父元素身上的？？？
display：flex;
flex-direction;
align-items;
flex-wrap:
justify-content;
display；inline-flex;
flex-flow: 复合属性 flex-direction flex-wrap :  row  nowrap
=================================
加在子元素身上
？
order:0  数值越小越靠前！

align-self  子元素单独在侧轴的对齐方式:auto;flex-start flex-end center baseline stretch

flex-grow:  伸缩比例  分份      默认值0;
flex-shrink  收缩比例  默认值1 
flex-basis  默认值 auto；
flex：    0   1  auto；
==========================================================================================
使用服务器端的字体？
@font-face{}

必须要写两个属性?
src:

font-family:


src:在服务器端的地址
url:   在服务器端的路径

format（） 字体格式
src:url(../) format();
src:url(../) format();
src:url(../) format(),url() format(),url(..)  format();
===========================================================================
字体格式？

ttf
svg
eot
woff
================================================================================

媒体查询

@media   媒体类型  and （媒体特性）{}

@media  {}

媒体类型
screen 
print
tv
all
handeld

==========================================
媒体特性

max-width
max-height
min。。
max 。。

device-width
device-height
max-device-width
min-device-height
color
scan
=============================================

关键字   


and  和  连接

not  除了。。。。 
only  仅仅
================================================

@media  and (max-width:375px){}  iphone   6     375  
==============================================

直接放在样式表 

style


==========================

link   media 属性
===============================

计数器 ！！！ 

初始计数器  重置计数器   定义计数器
couter-reset: num 0; 默认从0 开始 可以给正数负数都可以 ！！！
===================================


计数器增加

counter-increment:num 1; 默认值每次增加1次   也可是正数 负数都可以！
=======================================

content:“” 插入内容  必须配合 before  或 after 使用！！
content：“abc” 插入字符！！！；
content:"\2714";  插值字符编码；
content：url（../） 插入图片
content：attr(title) 插入属性
=====================================================
插入计数器！！！！！
content：counter（num） counter(计数器的名字，list-style-type)  upper-roman lower-roman  cjk-ideographic(大写中文)

lower-alpha： 小写英文字母
upper-alpha： 大写英文字母

====================================================

display:none 计数器不能增加     无法重置计数器！！
visibility:hidden;计数器可以增加；  可以重置计数器！！

=========================================================
border 站位
=========================================================================
outline 外轮廓  不占位    复合属性
 ouline-width：medium（默认值）  thin    thick  20px  30px  外轮廓的粗细
outline-color: 外轮廓的颜色 invert（默认值 背景色的反色）  ie 下才好使！；
outline-style： 外轮廓的样式   默认值 none  共有  9 种样式！！！！
outline-offset

















